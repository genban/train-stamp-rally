
GET / controllers.Assets.at(path="/public", file="index.html")

POST /api/session controllers.Sessions.login()
DELETE /api/session controllers.Sessions.logout()

GET /api/account/:id controllers.Accounts.showMin(id: Long)
GET /api/account controllers.Accounts.show()
POST /api/account controllers.Accounts.createAccount()

PUT /api/password_reset controllers.Passwords.request()
DELETE /api/password_reset controllers.Passwords.reset()

GET /api/lines controllers.Lines.list()
POST /api/line controllers.Lines.create()
GET /api/line/:lineId/stations controllers.Lines.lineStations(lineId: Long)

GET /api/diagram/:diagramId controllers.Diagrams.show(diagramId: Long)
GET /api/diagram/:diagramId/cost controllers.Diagrams.cost(diagramId: Long, from: Long)
GET /api/diagrams controllers.Diagrams.list()
POST /api/diagram controllers.Diagrams.create()
PUT /api/diagram/:diagramId controllers.Diagrams.update(diagramId: Long)
DELETE /api/diagram/:diagramId controllers.Diagrams.delete(diagramId: Long)

GET /api/train/:trainId controllers.Diagrams.train(trainId: Long)

GET /api/train_types controllers.Diagrams.trainTypes()

GET /api/mission/random controllers.Missions.random(size: Int ?= 6)
GET /api/mission/:missionId controllers.Missions.show(missionId: Long)
GET /api/missions controllers.Missions.list()
GET /api/account/:accountId/clear_count controllers.Missions.clearCount(accountId: Long)
POST /api/mission controllers.Missions.create()
PUT /api/mission/:id controllers.Missions.update(id: Long)
DELETE /api/mission/:id controllers.Missions.delete(id: Long)

GET /api/stations controllers.Stations.list(q: Option[String] ?= None, limit: Option[Int] ?= None)
PUT /api/station/:stationId controllers.Stations.update(stationId: Long)
GET /api/station/:stationId controllers.Stations.show(stationId: Long)
GET /api/station/:stationId/lines controllers.Stations.lines(stationId: Long)
GET /api/station/:stationId/image controllers.Stations.image(stationId: Long)
GET /api/station/:stationId/attribution controllers.Stations.attribution(stationId: Long)
POST /api/station/geo_restart controllers.Stations.restartGeo()
GET /api/line_stations controllers.Stations.lineStationList()
GET /api/line_station/:lineStationId controllers.Stations.lineStation(lineStationId: Long)
PUT /api/line_station/:lineStationId controllers.Stations.replace(lineStationId: Long)

GET /api/companies controllers.Companies.list()
POST /api/company controllers.Companies.create()
GET /api/companies/exists_fare controllers.Companies.existsFare()
GET /api/company/:companyId/type/:trainType/fares controllers.Companies.fares(companyId: Long, trainType: Int)
POST /api/company/:companyId/type/:trainType/fares controllers.Companies.createFares(companyId: Long, trainType: Int)

GET /api/scrape/train/:lineId/:trainId controllers.Scraper.train(lineId: String, trainId: String)
GET /api/scrape/station/:lineId/:pageName controllers.Scraper.station(lineId: String, pageName: String)

GET /api/games controllers.Games.list()
GET /api/game/:missionId controllers.Games.show(missionId: Long)
POST /api/game/:missionId controllers.Games.create(missionId: Long)
GET /api/game/:missionId/history controllers.Games.history(missionId: Long)

GET /api/game/:gameId/progresses controllers.GameProgresses.list(gameId: Long)

PUT /api/game/train controllers.Plays.board()
DELETE /api/game/:missionId/train controllers.Plays.undo(missionId: Long)
PUT /api/game/:missionId/clear controllers.Plays.clear(missionId: Long)

GET /api/game/:missionId/ranking/time controllers.Plays.rankingTime(missionId: Long)
GET /api/game/:missionId/ranking/money controllers.Plays.rankingMoney(missionId: Long)
GET /api/game/:missionId/ranking/distance controllers.Plays.rankingDistance(missionId: Long)

GET /api/validator controllers.Validators.list()

GET /api/histories controllers.Histories.list()
POST /api/history controllers.Histories.create()

GET /api/releases controllers.Releases.list()

DELETE /api/cache controllers.Caches.clear()

GET /*file controllers.MyAssets.at(path="/public", file)
